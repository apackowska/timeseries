
```{r}
library(fpp3)
```
```{r}
nz_arrivals <- aus_arrivals %>% filter(Origin == "NZ")
nz_arrivals %>%
  autoplot() +
  scale_x_yearquarter(breaks = "5 years", minor_breaks = "1 year")
```
```{r}
n_obs70 = as.integer(nrow(nz_arrivals)*0.7)
n_obs70
```


```{r}
nz_tr <- 
  nz_arrivals %>%
  stretch_tsibble(.init = n_obs70, .step = 1)
nz_tr
```
```{r}
max(nz_tr$.id)
```


```{r}
fit <- 
  nz_tr %>%
  model(
    snaive = SNAIVE(Arrivals),
    ETS_original= ETS(Arrivals ~ error("M")+ trend("A")+season("M")),
    ETS_original_Ad= ETS(Arrivals ~ error("M")+ trend("Ad")+season("M")),
    ETS_original_log =ETS(log(Arrivals)~error("M")+ trend("Ad")+season("M")),
    ETS_original_Ad_log = ETS(log(Arrivals)~error("M")+ trend("Ad")+season("M")),
    dcmp_ETS = decomposition_model(
                # Specify the decomposition scheme to be used.
                STL(log(Arrivals)),
                # Specify a model for the seasonally adjusted component
                ETS(season_adjust ~ error("A") + trend("A") + season("N")),
                # Specify a model for the seasonal component
                ETS(season_year~ error("A") + trend("N") + season("A"))
            )
  )
fit
```
```{r}
nz_arrivals %>%
  model(
    STL(Arrivals)
  )%>%
  components()
```
```{r}
fc_cv <- 
  fit %>%
  forecast(h=10)
fc_cv
```

```{r}
6*40*10
```
```{r}
fc_cv <- 
  fc_cv %>%
  group_by(.id, .model) %>%
  mutate(h = row_number()) %>%
  ungroup() %>%
  as_fable(response = "Arrivals", distribution = Arrivals) %>% 
  select(h, everything()) # Reorder columns
fc_cv
```
```{r}
fc_cv %>%
  accuracy(nz_arrivals) %>%
  select(.model, MAE, RMSE, MAPE) %>%
  arrange(RMSE)
```
```{r}
summary_cv_h <- 
  fc_cv %>%
  accuracy(nz_arrivals, by = c(".model", "h")) %>%
  select(h, .model, MAE, RMSE, MAPE)
```
```{r}
# for horizon up to 10 snaive was better, with h = 20 some were better
# because snaive includes only sesonality, last observed season
```
```{r}
summary_cv_h %>% 
  ggplot(aes(x = h, y = RMSE, color = .model)) +
  geom_line()
```

